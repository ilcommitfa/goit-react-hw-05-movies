{"version":3,"file":"static/js/194.4d9489ca.chunk.js","mappings":"+SAEMA,EAAU,mCAEHC,EAAmB,mCAAG,WAAOC,GAAP,uFACVC,EAAAA,EAAAA,IAAA,kEAAqEH,EAArE,iBAAqFE,IAD3E,cAC3BE,EAD2B,yBAE1BA,EAASC,MAFiB,2CAAH,sDAKnBC,EAAY,mCAAG,WAAOC,GAAP,uFACHJ,EAAAA,EAAAA,IAAA,4DAA+DH,EAA/D,kBAAgFO,IAD7E,cACpBH,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZG,EAAiB,mCAAG,WAAOC,GAAP,uFACRN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,oBAAmET,IAD3D,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBK,EAAiB,mCAAG,WAAOD,GAAP,uFACRN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,4BAA2ET,IADnE,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBM,EAAiB,mCAAG,WAAOF,GAAP,uFACRN,EAAAA,EAAAA,IAAA,6CAAgDM,EAAhD,4BAA2ET,IADnE,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qD,8LCpBjBO,EAAUC,EAAAA,GAAAA,KAAH,wKASPC,EAAQD,EAAAA,GAAAA,MAAH,2HAOLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,mGAQJI,EAASJ,EAAAA,GAAAA,OAAH,8GAONK,EAAOL,EAAAA,GAAAA,GAAH,iKAUJM,EAAWN,EAAAA,GAAAA,GAAH,2LAoBRO,IAVaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,mJAUFA,EAAAA,GAAAA,IAAH,4DAKLS,EAAaT,EAAAA,GAAAA,GAAH,4CAIVU,EAASV,EAAAA,GAAAA,EAAH,4C,SCtBnB,EA/Ce,WACb,OAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMxB,EAAQuB,EAAaE,IAAI,SAMzBC,EAAY,mCAAG,WAAOC,GAAP,gFACnBA,EAAMC,iBADa,UAEO7B,EAAAA,EAAAA,IAAaC,GAFpB,gBAEX6B,EAFW,EAEXA,QACRV,EAAUU,GAHS,2CAAH,sDAMlB,OACE,iCACE,2CACA,UAACxB,EAAD,CAASyB,SAAUJ,EAAnB,WACE,SAACnB,EAAD,CACEwB,MAAO/B,EACPgC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,SAnBa,SAACR,GACpBH,EAAgB,CAACxB,MAAO2B,EAAMS,OAAOL,OACtC,KAmBK,SAACrB,EAAD,CAAQsB,KAAK,SAAb,UAAsB,SAACxB,EAAD,UAExB,SAACG,EAAD,UACGO,EAAOmB,KAAI,SAACC,GAAD,OACV,SAAC1B,EAAD,WACE,UAAC,KAAD,CAAM2B,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMtB,GAAxC,WACE,SAACP,EAAD,CACE8B,IAAG,yCAAoCL,EAAMM,aAC7CC,IAAKP,EAAMQ,SAEb,SAAC/B,EAAD,UAAauB,EAAMQ,SACnB,UAAC9B,EAAD,sBAAiBsB,EAAMS,oBAPZT,EAAME,GADX,QAenB,C","sources":["components/api.js","pages/Movies.styled.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '1c946dce2b60cb636de6f72a25cb04da';\n\nexport const fetchTrendingMovies = async (page) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n  return response.data;\n};\n\nexport const searchMovies = async (query) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`);\n  return response.data;\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCredits = async (movieId) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};","import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.form`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n  gap: 4px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 8px;\n  border: 1px solid black;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 24px;\n  height: 24px;\n  &:hover {\n    color: orangered;\n  };\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  cursor: pointer;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  width: calc((100% - 40px)/5);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n  cursor: zoom-in;\n  }\n`;\n\nexport const LinkButton = styled(Link)`\n  display: block;\n  margin-right: auto;\n  color: #3f3f3f;\n  text-decoration: none;\n  :hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 18px;\n`;\n\nexport const Rating = styled.p`\n  font-size: 14px;\n`;","import { useState } from 'react';\nimport { searchMovies } from 'components/api';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Button, Input, Icon, Wrapper, List, ListItem, Image, MovieTitle, Rating } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  const handleChange = (event) => {\n    setSearchParams({query: event.target.value});\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const { results } = await searchMovies(query);\n    setMovies(results);\n  };\n\n  return (\n    <>\n      <h1>Search movies</h1>\n      <Wrapper onSubmit={handleSubmit}>\n        <Input\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleChange}\n        />\n        <Button type=\"submit\"><Icon /></Button>\n      </Wrapper>\n      <List>\n        {movies.map((movie) => (\n          <ListItem key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              <Image\n                src={`https://image.tmdb.org/t/p/w185${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <MovieTitle>{movie.title}</MovieTitle>\n              <Rating>Rating: {movie.vote_average}</Rating>\n            </Link>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Movies;"],"names":["API_KEY","fetchTrendingMovies","page","axios","response","data","searchMovies","query","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","Wrapper","styled","Input","Icon","HiSearch","Button","List","ListItem","Image","Link","MovieTitle","Rating","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","get","handleSubmit","event","preventDefault","results","onSubmit","value","type","autoComplete","autoFocus","onChange","target","map","movie","to","id","state","from","src","poster_path","alt","title","vote_average"],"sourceRoot":""}